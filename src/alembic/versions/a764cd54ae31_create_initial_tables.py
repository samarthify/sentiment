"""create initial tables

Revision ID: a764cd54ae31
Revises: 
Create Date: 2025-07-02 15:52:21.925190

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a764cd54ae31'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('api_calls_count', sa.Integer(), nullable=True),
    sa.Column('data_entries_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('email_configurations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('smtp_server', sa.String(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('recipients', sa.JSON(), nullable=True),
    sa.Column('notify_on_collection', sa.Boolean(), nullable=False),
    sa.Column('notify_on_processing', sa.Boolean(), nullable=False),
    sa.Column('notify_on_analysis', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_configurations_id'), 'email_configurations', ['id'], unique=False)
    op.create_index(op.f('ix_email_configurations_user_id'), 'email_configurations', ['user_id'], unique=False)
    op.create_table('sentiment_data',
    sa.Column('entry_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('published_date', sa.DateTime(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('source_url', sa.String(), nullable=True),
    sa.Column('query', sa.String(), nullable=True),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('platform', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('file_source', sa.String(), nullable=True),
    sa.Column('original_id', sa.String(), nullable=True),
    sa.Column('alert_id', sa.Integer(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('source_type', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('favorite', sa.Boolean(), nullable=True),
    sa.Column('tone', sa.String(), nullable=True),
    sa.Column('source_name', sa.String(), nullable=True),
    sa.Column('parent_url', sa.String(), nullable=True),
    sa.Column('parent_id', sa.String(), nullable=True),
    sa.Column('children', sa.Integer(), nullable=True),
    sa.Column('direct_reach', sa.Integer(), nullable=True),
    sa.Column('cumulative_reach', sa.Integer(), nullable=True),
    sa.Column('domain_reach', sa.Integer(), nullable=True),
    sa.Column('tags', sa.String(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('alert_name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('post_id', sa.String(), nullable=True),
    sa.Column('retweets', sa.Integer(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('user_location', sa.String(), nullable=True),
    sa.Column('comments', sa.Integer(), nullable=True),
    sa.Column('user_name', sa.String(), nullable=True),
    sa.Column('user_handle', sa.String(), nullable=True),
    sa.Column('user_avatar', sa.String(), nullable=True),
    sa.Column('sentiment_label', sa.String(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_justification', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('entry_id')
    )
    op.create_index('ix_sentiment_data_platform', 'sentiment_data', ['platform'], unique=False)
    op.create_index(op.f('ix_sentiment_data_run_timestamp'), 'sentiment_data', ['run_timestamp'], unique=False)
    op.create_index(op.f('ix_sentiment_data_user_id'), 'sentiment_data', ['user_id'], unique=False)
    op.create_table('target_individual_configurations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('individual_name', sa.String(), nullable=False),
    sa.Column('query_variations', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_target_individual_configurations_id'), 'target_individual_configurations', ['id'], unique=False)
    op.create_index(op.f('ix_target_individual_configurations_user_id'), 'target_individual_configurations', ['user_id'], unique=False)
    op.create_table('user_system_usage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('endpoint', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True),
    sa.Column('data_size', sa.Integer(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('is_error', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_system_usage_timestamp'), 'user_system_usage', ['timestamp'], unique=False)
    op.create_index(op.f('ix_user_system_usage_user_id'), 'user_system_usage', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_system_usage_user_id'), table_name='user_system_usage')
    op.drop_index(op.f('ix_user_system_usage_timestamp'), table_name='user_system_usage')
    op.drop_table('user_system_usage')
    op.drop_index(op.f('ix_target_individual_configurations_user_id'), table_name='target_individual_configurations')
    op.drop_index(op.f('ix_target_individual_configurations_id'), table_name='target_individual_configurations')
    op.drop_table('target_individual_configurations')
    op.drop_index(op.f('ix_sentiment_data_user_id'), table_name='sentiment_data')
    op.drop_index(op.f('ix_sentiment_data_run_timestamp'), table_name='sentiment_data')
    op.drop_index('ix_sentiment_data_platform', table_name='sentiment_data')
    op.drop_table('sentiment_data')
    op.drop_index(op.f('ix_email_configurations_user_id'), table_name='email_configurations')
    op.drop_index(op.f('ix_email_configurations_id'), table_name='email_configurations')
    op.drop_table('email_configurations')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
